// DO NOT EDIT THIS FILE. EDIT strings.json then run python StringsConverter.py

#import "OTRStrings.h"
#import "OTRLanguageManager_Private.h"
/** "We could not find any trusted devices for this contact.", Error message for not finding any devices */
NSString* NO_DEVICES_BUDDY_ERROR_STRING() { return [OTRLanguageManager translatedString:@"We could not find any trusted devices for this contact."]; }
/** "Server", server selection section title */
NSString* Server_String() { return [OTRLanguageManager translatedString:@"Server"]; }
/** "Underlying cryptographic error", SSL error message */
NSString* errSSLCryptoString() { return [OTRLanguageManager translatedString:@"Underlying cryptographic error"]; }
/** "Offline", Label in buddy list for users that are offline */
NSString* OFFLINE_STRING() { return [OTRLanguageManager translatedString:@"Offline"]; }
/** "Error", Title of error message pop-up box */
NSString* ERROR_STRING() { return [OTRLanguageManager translatedString:@"Error"]; }
/** "Log Out", log out from account */
NSString* LOGOUT_STRING() { return [OTRLanguageManager translatedString:@"Log Out"]; }
/** "Auto-delete", Title for automatic conversation deletion setting */
NSString* DELETE_CONVERSATIONS_ON_DISCONNECT_TITLE_STRING() { return [OTRLanguageManager translatedString:@"Auto-delete"]; }
/** "Done", Title for button to press when user is finished */
NSString* DONE_STRING() { return [OTRLanguageManager translatedString:@"Done"]; }
/** "No Error", SSL error message */
NSString* noErrString() { return [OTRLanguageManager translatedString:@"No Error"]; }
/** "Basic Setup", username section */
NSString* Basic_Setup() { return [OTRLanguageManager translatedString:@"Basic Setup"]; }
/** "ChatSecure Push", Title for ChatSecure Push (this probably doesnt need to be translated) */
NSString* CHATSECURE_PUSH_STRING() { return [OTRLanguageManager translatedString:@"ChatSecure Push"]; }
/** "The conversation with %@ is no longer secure.", Warn user that the current chat is no longer secure */
NSString* CONVERSATION_NO_LONGER_SECURE_STRING() { return [OTRLanguageManager translatedString:@"The conversation with %@ is no longer secure."]; }
/** "You must enter a username and a password to login.", error message shown when user doesn't fill in a username or password */
NSString* USER_PASS_BLANK_STRING() { return [OTRLanguageManager translatedString:@"You must enter a username and a password to login."]; }
/** "Purported fingerprint for", the alleged fingerprint of their other person */
NSString* THEIR_FINGERPRINT_STRING() { return [OTRLanguageManager translatedString:@"Purported fingerprint for"]; }
/** "Peer cert is valid, or was ignored if verification disabled", SSL error message */
NSString* errSSLPeerAuthCompletedString() { return [OTRLanguageManager translatedString:@"Peer cert is valid, or was ignored if verification disabled"]; }
/** "Password", Label text for password field on login screen */
NSString* PASSWORD_STRING() { return [OTRLanguageManager translatedString:@"Password"]; }
/** "Advanced", String to describe advanced set of settings */
NSString* ADVANCED_STRING() { return [OTRLanguageManager translatedString:@"Advanced"]; }
/** "Could not decrypt database. If the app is not working properly, you may need to delete and reinstall.",  */
NSString* Could_Not_Decrypt_Database() { return [OTRLanguageManager translatedString:@"Could not decrypt database. If the app is not working properly, you may need to delete and reinstall."]; }
/** "Profile", title for contacts profile view */
NSString* Profile_String() { return [OTRLanguageManager translatedString:@"Profile"]; }
/** "Unrecognized Invite Format", shown when invite QR code doesnt work */
NSString* Unrecognized_Invite_Format() { return [OTRLanguageManager translatedString:@"Unrecognized Invite Format"]; }
/** "Resend", Label for button to resend message. */
NSString* RESEND_STRING() { return [OTRLanguageManager translatedString:@"Resend"]; }
/** "Our policy requires encryption but we are trying to send an unencrypted message out.", Error string for OTR message string */
NSString* OTRL_MSGEVENT_ENCRYPTION_REQUIRED_STRING() { return [OTRLanguageManager translatedString:@"Our policy requires encryption but we are trying to send an unencrypted message out."]; }
/** "Version", when displaying version numbers such as 1.0.0 */
NSString* VERSION_STRING() { return [OTRLanguageManager translatedString:@"Version"]; }
/** "Enter a group name", The placeholder text for the text field to enter a group chat name or label */
NSString* ENTER_GROUP_NAME_STRING() { return [OTRLanguageManager translatedString:@"Enter a group name"]; }
/** "Account Disconnected", Error title when account is disconnected */
NSString* ACCOUNT_DISCONNECTED_STRING() { return [OTRLanguageManager translatedString:@"Account Disconnected"]; }
/** "Initiate Encrypted Chat", Shown when starting an encrypted chat session */
NSString* INITIATE_ENCRYPTED_CHAT_STRING() { return [OTRLanguageManager translatedString:@"Initiate Encrypted Chat"]; }
/** "Invalid Email", title label for invalid email */
NSString* INVALID_EMAIL_TITLE_STRING() { return [OTRLanguageManager translatedString:@"Invalid Email"]; }
/** "Sending", Label text for when a transfer is in progress (normally followed by a percent value 34%) */
NSString* SENDING_STRING() { return [OTRLanguageManager translatedString:@"Sending"]; }
/** "Crash Detected",  */
NSString* Crash_Detected_Title() { return [OTRLanguageManager translatedString:@"Crash Detected"]; }
/** "Resend Message", Ttitle for alert view to resend a message */
NSString* RESEND_MESSAGE_TITLE() { return [OTRLanguageManager translatedString:@"Resend Message"]; }
/** "Send plaintext message", The placeholder text in the chat view where the message should go */
NSString* SEND_PLAINTEXT_STRING() { return [OTRLanguageManager translatedString:@"Send plaintext message"]; }
/** "Message has not been sent because our buddy has ended the private conversation. We should either close the connection, or refresh it.", Error string for OTR message string */
NSString* OTRL_MSGEVENT_CONNECTION_ENDED_STRING() { return [OTRLanguageManager translatedString:@"Message has not been sent because our buddy has ended the private conversation. We should either close the connection, or refresh it."]; }
/** "Please log into this account before managing requests.", Error description when account is disconnected while managing requests */
NSString* ACCOUNT_DISCONNECTED_DESCRIPTION_STRING() { return [OTRLanguageManager translatedString:@"Please log into this account before managing requests."]; }
/** "Received and discarded a message intended for another instance.", Error string for OTR message string */
NSString* OTRL_MSGEVENT_RCVDMSG_FOR_OTHER_INSTANCE_STRING() { return [OTRLanguageManager translatedString:@"Received and discarded a message intended for another instance."]; }
/** "Resending this message will use %@.", Describe what resending will do the %@ will be replaced withe the method OTR/OMEMO/Plaintext */
NSString* RESEND_DESCRIPTION_STRING() { return [OTRLanguageManager translatedString:@"Resending this message will use %@."]; }
/** "Open in Twitter", Label for button to open link in twitter app */
NSString* OPEN_IN_TWITTER_STRING() { return [OTRLanguageManager translatedString:@"Open in Twitter"]; }
/** "Twitter", Name of the popular social tweeting site */
NSString* TWITTER_STRING() { return [OTRLanguageManager translatedString:@"Twitter"]; }
/** "Microphone Disabled", microphone permission is disabled */
NSString* Microphone_Disabled() { return [OTRLanguageManager translatedString:@"Microphone Disabled"]; }
/** "Connected", Whether or not account is logged in */
NSString* CONNECTED_STRING() { return [OTRLanguageManager translatedString:@"Connected"]; }
/** "Tor is an experimental feature, please use with caution.", Message for warning about using tor network */
NSString* TOR_WARNING_MESSAGE_STRING() { return [OTRLanguageManager translatedString:@"Tor is an experimental feature, please use with caution."]; }
/** "My QR Code", Your QR code */
NSString* MY_QR_CODE() { return [OTRLanguageManager translatedString:@"My QR Code"]; }
/** "Choose from our list of trusted servers, or use your own.", server selection footer */
NSString* Server_String_Hint() { return [OTRLanguageManager translatedString:@"Choose from our list of trusted servers, or use your own."]; }
/** "Extended Away", Default message when a user status is set to extended away */
NSString* EXTENDED_AWAY_STRING() { return [OTRLanguageManager translatedString:@"Extended Away"]; }
/** "Received our own OTR messages.", Error string for OTR message string */
NSString* OTRL_MSGEVENT_MSG_REFLECTED_STRING() { return [OTRLanguageManager translatedString:@"Received our own OTR messages."]; }
/** "Server closed session with no notification", SSL error message */
NSString* errSSLClosedNoNotifyString() { return [OTRLanguageManager translatedString:@"Server closed session with no notification"]; }
/** "Could not retrieve public key from certificate", Error message when cannot get public key from SSL certificate */
NSString* PUBLIC_KEY_ERROR_STRING() { return [OTRLanguageManager translatedString:@"Could not retrieve public key from certificate"]; }
/** "Received an encrypted message but cannot read it because no private connection is established yet.", Error string for OTR message string */
NSString* OTRL_MSGEVENT_RCVDMSG_NOT_IN_PRIVATE_STRING() { return [OTRLanguageManager translatedString:@"Received an encrypted message but cannot read it because no private connection is established yet."]; }
/** "New SSL Certificate", Title for alert when a new SSL certificate is encountered */
NSString* NEW_CERTIFICATE_STRING() { return [OTRLanguageManager translatedString:@"New SSL Certificate"]; }
/** "Log In", log in to account */
NSString* LOGIN_STRING() { return [OTRLanguageManager translatedString:@"Log In"]; }
/** "Cancel", Cancel an alert window */
NSString* CANCEL_STRING() { return [OTRLanguageManager translatedString:@"Cancel"]; }
/** "Database Error",  */
NSString* Database_Error_String() { return [OTRLanguageManager translatedString:@"Database Error"]; }
/** "Login Automatically", Label for account setting that autologins on launch */
NSString* LOGIN_AUTOMATICALLY_STRING() { return [OTRLanguageManager translatedString:@"Login Automatically"]; }
/** "Untrusted Device", Title for error message */
NSString* UNTRUSTED_DEVICE_STRING() { return [OTRLanguageManager translatedString:@"Untrusted Device"]; }
/** "Decoding error", SSL error message */
NSString* errSSLPeerDecodeErrorString() { return [OTRLanguageManager translatedString:@"Decoding error"]; }
/** "Your current iOS system version (%@) contains a serious security vulnerability. Please update to the latest version as soon as possible.", Alert to system issues, leave in the %@ */
NSString* iOS_SSL_ERROR_PART1_STRING() { return [OTRLanguageManager translatedString:@"Your current iOS system version (%@) contains a serious security vulnerability. Please update to the latest version as soon as possible."]; }
/** "Record overflow", SSL error message */
NSString* errSSLRecordOverflowString() { return [OTRLanguageManager translatedString:@"Record overflow"]; }
/** "Decryption failure", SSL error message */
NSString* errSSLDecryptionFailString() { return [OTRLanguageManager translatedString:@"Decryption failure"]; }
/** "Add", Button title to add someone as a buddy */
NSString* ADD_STRING() { return [OTRLanguageManager translatedString:@"Add"]; }
/** "GitHub", Name of popular web based hosting service */
NSString* GITHUB_STRING() { return [OTRLanguageManager translatedString:@"GitHub"]; }
/** "You're ready to use", String used when onboarding works */
NSString* ONBOARDING_SUCCESS_STRING() { return [OTRLanguageManager translatedString:@"You're ready to use"]; }
/** "Removed By Server",  */
NSString* Removed_By_Server() { return [OTRLanguageManager translatedString:@"Removed By Server"]; }
/** "Open in Facebook", Label for button to open link in facebook app */
NSString* OPEN_IN_FACEBOOK_STRING() { return [OTRLanguageManager translatedString:@"Open in Facebook"]; }
/** "Show Advanced Encryption Settings",  */
NSString* Show_Advanced_Encryption_Settings() { return [OTRLanguageManager translatedString:@"Show Advanced Encryption Settings"]; }
/** "Peer host name mismatch", SSL error message */
NSString* errSSLHostNameMismatchString() { return [OTRLanguageManager translatedString:@"Peer host name mismatch"]; }
/** "This chat is secured", Warns user that the current chat is secure */
NSString* CONVERSATION_SECURE_WARNING_STRING() { return [OTRLanguageManager translatedString:@"This chat is secured"]; }
/** "Pinned Certificates", Button Lable to show all pinned SSL certificates */
NSString* PINNED_CERTIFICATES_STRING() { return [OTRLanguageManager translatedString:@"Pinned Certificates"]; }
/** "Permanently delete", Ask user if they want to delete the stored account information */
NSString* DELETE_ACCOUNT_MESSAGE_STRING() { return [OTRLanguageManager translatedString:@"Permanently delete"]; }
/** "Received a general OTR error.", Error string for OTR message string */
NSString* OTRL_MSGEVENT_RCVDMSG_GENERAL_ERR_STRING() { return [OTRLanguageManager translatedString:@"Received a general OTR error."]; }
/** "Created by", Start of sentence that will be followed by names */
NSString* CREATED_BY_STRING() { return [OTRLanguageManager translatedString:@"Created by"]; }
/** "The conversation is not secure", Title to let user know that encryption is not currently enabled */
NSString* UNLOCKED_ALERT_STRING() { return [OTRLanguageManager translatedString:@"The conversation is not secure"]; }
/** "Save", Title for button for saving a setting */
NSString* SAVE_STRING() { return [OTRLanguageManager translatedString:@"Save"]; }
/** "Cert chain not verified by root", SSL error message */
NSString* errSSLNoRootCertString() { return [OTRLanguageManager translatedString:@"Cert chain not verified by root"]; }
/** "Accounts", Title for the accounts tab */
NSString* ACCOUNTS_STRING() { return [OTRLanguageManager translatedString:@"Accounts"]; }
/** "Pending Approval", String for XMPP buddies when adding buddy is pending */
NSString* PENDING_APPROVAL_STRING() { return [OTRLanguageManager translatedString:@"Pending Approval"]; }
/** "Decryption failed", SSL error message */
NSString* errSSLPeerDecryptionFailString() { return [OTRLanguageManager translatedString:@"Decryption failed"]; }
/** "Jabber (XMPP)", the name for jabber, also include (XMPP) at the end */
NSString* JABBER_STRING() { return [OTRLanguageManager translatedString:@"Jabber (XMPP)"]; }
/** "Verify", Shown when verifying fingerprints */
NSString* VERIFY_STRING() { return [OTRLanguageManager translatedString:@"Verify"]; }
/** "Chain had an expired cert", SSL error message */
NSString* errSSLCertExpiredString() { return [OTRLanguageManager translatedString:@"Chain had an expired cert"]; }
/** "Configuration error", SSL error message */
NSString* errSSLBadConfigurationString() { return [OTRLanguageManager translatedString:@"Configuration error"]; }
/** "Add Buddy", The title for the view to add a buddy */
NSString* ADD_BUDDY_STRING() { return [OTRLanguageManager translatedString:@"Add Buddy"]; }
/** "Server has requested a client cert", SSL error message */
NSString* errSSLClientCertRequestedString() { return [OTRLanguageManager translatedString:@"Server has requested a client cert"]; }
/** "XMPP + Tor", Title for xmpp accounts that connect through the Tor network */
NSString* XMPP_TOR_STRING() { return [OTRLanguageManager translatedString:@"XMPP + Tor"]; }
/** "Error Registering Username", Error message when registration fails */
NSString* REGISTER_ERROR_STRING() { return [OTRLanguageManager translatedString:@"Error Registering Username"]; }
/** "Cannot read the received message.", Error string for OTR message string */
NSString* OTRL_MSGEVENT_RCVDMSG_UNREADABLE_STRING() { return [OTRLanguageManager translatedString:@"Cannot read the received message."]; }
/** "Bad protocol version", SSL error message */
NSString* errSSLPeerProtocolVersionString() { return [OTRLanguageManager translatedString:@"Bad protocol version"]; }
/** "Only one Tor account per domain is supported at this time.", Message shown when using more than one Tor account with the same domain */
NSString* TOR_DOMAIN_WARNING_MESSAGE_STRING() { return [OTRLanguageManager translatedString:@"Only one Tor account per domain is supported at this time."]; }
/** "Change Passphrase", Title for button to change encrypted database passphrase */
NSString* CHANGE_PASSPHRASE_STRING() { return [OTRLanguageManager translatedString:@"Change Passphrase"]; }
/** "Recent", Title for header of Buddy list view with Recent Buddies */
NSString* RECENT_STRING() { return [OTRLanguageManager translatedString:@"Recent"]; }
/** "Insufficient buffer provided", SSL error message */
NSString* errSSLBufferOverflowString() { return [OTRLanguageManager translatedString:@"Insufficient buffer provided"]; }
/** "Copy", Copy string to clipboard as in copy and paste */
NSString* COPY_STRING() { return [OTRLanguageManager translatedString:@"Copy"]; }
/** "Incoming", Label for incoming data transfers */
NSString* INCOMING_STRING() { return [OTRLanguageManager translatedString:@"Incoming"]; }
/** "Connecting", String to state if an account is progress of creating a connection */
NSString* CONNECTING_STRING() { return [OTRLanguageManager translatedString:@"Connecting"]; }
/** "The fingerprint has not been verified", Title to let user know that the OTR fingerprint has not been checked */
NSString* LOCKED_WARN_STRING() { return [OTRLanguageManager translatedString:@"The fingerprint has not been verified"]; }
/** "Unlock", Label for button to unlock app */
NSString* UNLOCK_STRING() { return [OTRLanguageManager translatedString:@"Unlock"]; }
/** "Don't change these unless you really know what you're doing. By default we will always select the best available encryption method.",  */
NSString* Advanced_Crypto_Warning() { return [OTRLanguageManager translatedString:@"Don't change these unless you really know what you're doing. By default we will always select the best available encryption method."]; }
/** "Your donation will help fund the continued development of ChatSecure.", Message shown when about to donate */
NSString* DONATE_MESSAGE_STRING() { return [OTRLanguageManager translatedString:@"Your donation will help fund the continued development of ChatSecure."]; }
/** "Donate", Title for donation link */
NSString* DONATE_STRING() { return [OTRLanguageManager translatedString:@"Donate"]; }
/** "Reject", Button title to reject a request such as a buddy request */
NSString* REJECT_STRING() { return [OTRLanguageManager translatedString:@"Reject"]; }
/** "Illegal parameter", SSL error message */
NSString* errSSLIllegalParamString() { return [OTRLanguageManager translatedString:@"Illegal parameter"]; }
/** "Create", Title for button to create account */
NSString* CREATE_STRING() { return [OTRLanguageManager translatedString:@"Create"]; }
/** "Resource", Label for text input for XMPP resource */
NSString* RESOURCE_STRING() { return [OTRLanguageManager translatedString:@"Resource"]; }
/** "The app crashed last time it was launched. Send a crash report?",  */
NSString* Crash_Detected_Message() { return [OTRLanguageManager translatedString:@"The app crashed last time it was launched. Send a crash report?"]; }
/** "Access denied", SSL error message */
NSString* errSSLPeerAccessDeniedString() { return [OTRLanguageManager translatedString:@"Access denied"]; }
/** "Internal error", SSL error message */
NSString* errSSLPeerInternalErrorString() { return [OTRLanguageManager translatedString:@"Internal error"]; }
/** "An error occured while encrypting a message and the message was not sent.", Error string for OTR message string */
NSString* OTRL_MSGEVENT_ENCRYPTION_ERROR_STRING() { return [OTRLanguageManager translatedString:@"An error occured while encrypting a message and the message was not sent."]; }
/** "Release to delete", Label for instruction to delete current recording */
NSString* RELEASE_TO_DELETE_STRING() { return [OTRLanguageManager translatedString:@"Release to delete"]; }
/** "Photo Library", Label for button to open up photo library and choose photo */
NSString* PHOTO_LIBRARY_STRING() { return [OTRLanguageManager translatedString:@"Photo Library"]; }
/** "Verify Fingerprint", Title of the dialog for fingerprint verification */
NSString* VERIFY_FINGERPRINT_STRING() { return [OTRLanguageManager translatedString:@"Verify Fingerprint"]; }
/** "Saved Certificates", Title for listing the user saved SSL certificates */
NSString* SAVED_CERTIFICATES_STRING() { return [OTRLanguageManager translatedString:@"Saved Certificates"]; }
/** "New Account", Title for New Account View */
NSString* NEW_ACCOUNT_STRING() { return [OTRLanguageManager translatedString:@"New Account"]; }
/** "Domain needs to be set", Error message when domain textfield left blank */
NSString* DOMAIN_BLANK_ERROR_STRING() { return [OTRLanguageManager translatedString:@"Domain needs to be set"]; }
/** "The conversation is secure and the fingerprint is verfied", Title to let user know that the OTR fingerprint has not been checked */
NSString* LOCKED_SECURE_STRING() { return [OTRLanguageManager translatedString:@"The conversation is secure and the fingerprint is verfied"]; }
/** "QR code", Label for qr code image */
NSString* QR_CODE_STRING() { return [OTRLanguageManager translatedString:@"QR code"]; }
/** "is now away", Message shown in line for users that are away */
NSString* AWAY_MESSAGE_STRING() { return [OTRLanguageManager translatedString:@"is now away"]; }
/** "Facebook account removed", Title for alert about removing facebook */
NSString* FACEBOOK_REMOVED_STRING() { return [OTRLanguageManager translatedString:@"Facebook account removed"]; }
/** "Away", Label in buddy list for users that are away */
NSString* AWAY_STRING() { return [OTRLanguageManager translatedString:@"Away"]; }
/** "Hostname", Label text for hostname field on login scree */
NSString* HOSTNAME_STRING() { return [OTRLanguageManager translatedString:@"Hostname"]; }
/** "Insufficient security", SSL error message */
NSString* errSSLPeerInsufficientSecurityString() { return [OTRLanguageManager translatedString:@"Insufficient security"]; }
/** "iOS Vulnerability", Directions to the system software update */
NSString* iOS_SSL_ERROR_TITLE_STRING() { return [OTRLanguageManager translatedString:@"iOS Vulnerability"]; }
/** "Custom", Place holder label for custom domains */
NSString* CUSTOM_STRING() { return [OTRLanguageManager translatedString:@"Custom"]; }
/** "Hold to talk", Label for button to hold to record audio */
NSString* HOLD_TO_TALK_STRING() { return [OTRLanguageManager translatedString:@"Hold to talk"]; }
/** "Skip", Label for button to skip this step */
NSString* SKIP_STRING() { return [OTRLanguageManager translatedString:@"Skip"]; }
/** "Search", Label for text field where you search for a buddy */
NSString* SEARCH_STRING() { return [OTRLanguageManager translatedString:@"Search"]; }
/** "OSCAR Instant Messenger", the name for AIM */
NSString* AIM_STRING() { return [OTRLanguageManager translatedString:@"OSCAR Instant Messenger"]; }
/** "1 Minute Alert Before Disconnection", Description for disconnection warning setting */
NSString* DISCONNECTION_WARNING_DESC_STRING() { return [OTRLanguageManager translatedString:@"1 Minute Alert Before Disconnection"]; }
/** "The previous message was resent.", Error string for OTR message string */
NSString* OTRL_MSGEVENT_MSG_RESENT_STRING() { return [OTRLanguageManager translatedString:@"The previous message was resent."]; }
/** "Connect", String for button to connect connect */
NSString* CONNECT_STRING() { return [OTRLanguageManager translatedString:@"Connect"]; }
/** "This device doesn't seem to be configured to make payments.", Error message when trying to make a purchase but payments haven't been set up yet */
NSString* PAYMENTS_SETUP_ERROR_STRING() { return [OTRLanguageManager translatedString:@"This device doesn't seem to be configured to make payments."]; }
/** "wants to chat.", This string follows a user's dislplay name or username ex Bob wants to chat. */
NSString* WANTS_TO_CHAT_STRING() { return [OTRLanguageManager translatedString:@"wants to chat."]; }
/** "Record overflow", SSL error message */
NSString* errSSLPeerRecordOverflowString() { return [OTRLanguageManager translatedString:@"Record overflow"]; }
/** "Knock Sent", Text for label after knock is sent. Like knocking on a door */
NSString* KNOCK_SENT_STRING() { return [OTRLanguageManager translatedString:@"Knock Sent"]; }
/** "Security", Title heading in settings */
NSString* SECURITY_STRING() { return [OTRLanguageManager translatedString:@"Security"]; }
/** "Plaintext (Opportunistic OTR)",  */
NSString* Plaintext_Opportunistic_OTR() { return [OTRLanguageManager translatedString:@"Plaintext (Opportunistic OTR)"]; }
/** "Unable to Send Message", Title for error message */
NSString* UNABLE_TO_SEND_STRING() { return [OTRLanguageManager translatedString:@"Unable to Send Message"]; }
/** "Unknown certificate", SSL error message */
NSString* errSSLPeerCertUnknownString() { return [OTRLanguageManager translatedString:@"Unknown certificate"]; }
/** "Error Creating Account", title label for error when creating account */
NSString* ERROR_CREATING_ACCOUNT_STRING() { return [OTRLanguageManager translatedString:@"Error Creating Account"]; }
/** "OTR Fingerprints", Lable for button to show saved fingerprints */
NSString* OTR_FINGERPRINTS_STRING() { return [OTRLanguageManager translatedString:@"OTR Fingerprints"]; }
/** "Certificate expired", SSL error message */
NSString* errSSLPeerCertExpiredString() { return [OTRLanguageManager translatedString:@"Certificate expired"]; }
/** "Send %@ encrypted message", The placeholder text in the chat view where the message should go */
NSString* SEND_ENCRYPTED_STRING() { return [OTRLanguageManager translatedString:@"Send %@ encrypted message"]; }
/** "A private conversation could not be set up.", Error string for OTR message string */
NSString* OTRL_MSGEVENT_SETUP_ERROR_STRING() { return [OTRLanguageManager translatedString:@"A private conversation could not be set up."]; }
/** "Unknown Error", Describes an error without a known cause */
NSString* UNKNOWN_ERROR_STRING() { return [OTRLanguageManager translatedString:@"Unknown Error"]; }
/** "Cipher Suite negotiation failure", SSL error message */
NSString* errSSLNegotiationString() { return [OTRLanguageManager translatedString:@"Cipher Suite negotiation failure"]; }
/** "Export restriction", SSL error message */
NSString* errSSLPeerExportRestrictionString() { return [OTRLanguageManager translatedString:@"Export restriction"]; }
/** "Handshake failure", SSL error message */
NSString* errSSLPeerHandshakeFailString() { return [OTRLanguageManager translatedString:@"Handshake failure"]; }
/** "Google Talk", the name for Google talk */
NSString* GOOGLE_TALK_STRING() { return [OTRLanguageManager translatedString:@"Google Talk"]; }
/** "Manage OTR fingerprints", Subtitle lable for button to show saved fingerprints */
NSString* OTR_FINGERPRINTS_SUBTITLE_STRING() { return [OTRLanguageManager translatedString:@"Manage OTR fingerprints"]; }
/** "Fatal alert", SSL error message */
NSString* errSSLFatalAlertString() { return [OTRLanguageManager translatedString:@"Fatal alert"]; }
/** "Settings -> General -> Software Update", Directions to the system software update */
NSString* iOS_SSL_ERROR_PART2_STRING() { return [OTRLanguageManager translatedString:@"Settings -> General -> Software Update"]; }
/** "Username", Label text for username field on login screen */
NSString* USERNAME_STRING() { return [OTRLanguageManager translatedString:@"Username"]; }
/** "Advanced Encryption Settings",  */
NSString* Advanced_Encryption_Settings() { return [OTRLanguageManager translatedString:@"Advanced Encryption Settings"]; }
/** "Module attach failure", SSL error message */
NSString* errSSLModuleAttachString() { return [OTRLanguageManager translatedString:@"Module attach failure"]; }
/** "Your password will be stored in the iOS Keychain of this device only, and is only as safe as your device passphrase or pin. However, it will not persist during a device backup/restore via iTunes, so please don't forget it, or you may lose your conversation history.", Text that describes what remembering your passphrase does */
NSString* REMEMBER_PASSPHRASE_INFO_STRING() { return [OTRLanguageManager translatedString:@"Your password will be stored in the iOS Keychain of this device only, and is only as safe as your device passphrase or pin. However, it will not persist during a device backup/restore via iTunes, so please don't forget it, or you may lose your conversation history."]; }
/** "Waiting", Label text for when a transfer has not started yet */
NSString* WAITING_STRING() { return [OTRLanguageManager translatedString:@"Waiting"]; }
/** "Group Name", The title for the view to enter a group chat name or label */
NSString* GROUP_NAME_STRING() { return [OTRLanguageManager translatedString:@"Group Name"]; }
/** "Share", Title for sharing a link to the app */
NSString* SHARE_STRING() { return [OTRLanguageManager translatedString:@"Share"]; }
/** "Think of a unique nickname that you don't use anywhere else and doesn't contain personal information.", basic setup selection footer */
NSString* Basic_Setup_Hint() { return [OTRLanguageManager translatedString:@"Think of a unique nickname that you don't use anywhere else and doesn't contain personal information."]; }
/** "Auto-start Encryption", string for title yes/no setting for allowing opportunistic otr */
NSString* OPPORTUNISTIC_OTR_SETTING_TITLE() { return [OTRLanguageManager translatedString:@"Auto-start Encryption"]; }
/** "Send Feedback", String on button to email feedback */
NSString* SEND_FEEDBACK_STRING() { return [OTRLanguageManager translatedString:@"Send Feedback"]; }
/** "Name", The string describing a buddy's display name */
NSString* NAME_STRING() { return [OTRLanguageManager translatedString:@"Name"]; }
/** "Block", The String for a button to block a buddy */
NSString* BLOCK_STRING() { return [OTRLanguageManager translatedString:@"Block"]; }
/** "Account Fingerprints", Title for showing the users account otr fingerprints */
NSString* ACCOUNT_FINGERPRINTS_STRING() { return [OTRLanguageManager translatedString:@"Account Fingerprints"]; }
/** "OK", Accept the dialog */
NSString* OK_STRING() { return [OTRLanguageManager translatedString:@"OK"]; }
/** "Enables opportunistic OTR", string for decription yes/no setting for allowing opportunistic otr */
NSString* OPPORTUNISTIC_OTR_SETTING_DESCRIPTION() { return [OTRLanguageManager translatedString:@"Enables opportunistic OTR"]; }
/** "Unexpected (skipped) record in DTLS", SSL error message */
NSString* errSSLUnexpectedRecordString() { return [OTRLanguageManager translatedString:@"Unexpected (skipped) record in DTLS"]; }
/** "View Profile", The label for a button to view the buddy profile */
NSString* VIEW_PROFILE_STRING() { return [OTRLanguageManager translatedString:@"View Profile"]; }
/** "Port", Label for port number field for connecting to service */
NSString* PORT_STRING() { return [OTRLanguageManager translatedString:@"Port"]; }
/** "Connection closed via error", SSL error message */
NSString* errSSLClosedAbortString() { return [OTRLanguageManager translatedString:@"Connection closed via error"]; }
/** "Subscription Requests", Title of view where you can mange buddy or subscription requests */
NSString* SUBSCRIPTION_REQUEST_TITLE() { return [OTRLanguageManager translatedString:@"Subscription Requests"]; }
/** "Nickname", for choosing your XMPP vCard display name */
NSString* Nickname_String() { return [OTRLanguageManager translatedString:@"Nickname"]; }
/** "This message was received from an untrusted device.", Error message description */
NSString* UNTRUSTED_DEVICE_REVEIVED_STRING() { return [OTRLanguageManager translatedString:@"This message was received from an untrusted device."]; }
/** "Delete Account?", Ask user if they want to delete the stored account information */
NSString* DELETE_ACCOUNT_TITLE_STRING() { return [OTRLanguageManager translatedString:@"Delete Account?"]; }
/** "Decompression failure", SSL error message */
NSString* errSSLPeerDecompressFailString() { return [OTRLanguageManager translatedString:@"Decompression failure"]; }
/** "Bad unsupported cert format", SSL error message */
NSString* errSSLPeerUnsupportedCertString() { return [OTRLanguageManager translatedString:@"Bad unsupported cert format"]; }
/** "Received an unencrypted message.", Error string for OTR message string */
NSString* OTRL_MSGEVENT_RCVDMSG_UNENCRYPTED_STRING() { return [OTRLanguageManager translatedString:@"Received an unencrypted message."]; }
/** "Unknown Cert Authority", SSL error message */
NSString* errSSLPeerUnknownCAString() { return [OTRLanguageManager translatedString:@"Unknown Cert Authority"]; }
/** "Bad SSLCipherSuite", SSL error message */
NSString* errSSLBadCipherSuiteString() { return [OTRLanguageManager translatedString:@"Bad SSLCipherSuite"]; }
/** "is now offline", Message shown in line for users that are offline */
NSString* OFFLINE_MESSAGE_STRING() { return [OTRLanguageManager translatedString:@"is now offline"]; }
/** "Bad MAC", SSL error message */
NSString* errSSLBadRecordMacString() { return [OTRLanguageManager translatedString:@"Bad MAC"]; }
/** "Failed to connect to XMPP server. Please check your login credentials and internet connection and try again.", Message when cannot connect to XMPP server */
NSString* XMPP_FAIL_STRING() { return [OTRLanguageManager translatedString:@"Failed to connect to XMPP server. Please check your login credentials and internet connection and try again."]; }
/** "No renegotiation allowed", SSL error message */
NSString* errSSLPeerNoRenegotiationString() { return [OTRLanguageManager translatedString:@"No renegotiation allowed"]; }
/** "plaintext", Label for messages that are not encrypted */
NSString* UNENCRYPTED_STRING() { return [OTRLanguageManager translatedString:@"plaintext"]; }
/** "Background session will expire in one minute.", Message displayed in Notification Manager when session will expire in one minute */
NSString* EXPIRATION_STRING() { return [OTRLanguageManager translatedString:@"Background session will expire in one minute."]; }
/** "Enable Tor",  */
NSString* Enable_Tor_String() { return [OTRLanguageManager translatedString:@"Enable Tor"]; }
/** "Show Advanced Options", toggle switch for show advanced */
NSString* Show_Advanced_Options() { return [OTRLanguageManager translatedString:@"Show Advanced Options"]; }
/** "Me",  */
NSString* Me_String() { return [OTRLanguageManager translatedString:@"Me"]; }
/** "Internal error", SSL error message */
NSString* errSSLInternalString() { return [OTRLanguageManager translatedString:@"Internal error"]; }
/** "Enable Push", button for enabling push messages */
NSString* ENABLE_PUSH_STRING() { return [OTRLanguageManager translatedString:@"Enable Push"]; }
/** "You are not connected", Text explaining that the account is not currently connected */
NSString* YOU_ARE_NOT_CONNECTED_STRING() { return [OTRLanguageManager translatedString:@"You are not connected"]; }
/** "Facebook", the name for facebook */
NSString* FACEBOOK_STRING() { return [OTRLanguageManager translatedString:@"Facebook"]; }
/** "Push", Title for push-messaging related settings */
NSString* PUSH_TITLE_STRING() { return [OTRLanguageManager translatedString:@"Push"]; }
/** "There already exists an account with this username.", Error message when there is a duplicate account */
NSString* DUPLICATE_ACCOUNT_MESSAGE_STRING() { return [OTRLanguageManager translatedString:@"There already exists an account with this username."]; }
/** "I/O would block (not fatal)", SSL error message */
NSString* errSSLWouldBlockString() { return [OTRLanguageManager translatedString:@"I/O would block (not fatal)"]; }
/** "Connecting to Tor", Message shown when connecting to the Tor network */
NSString* CONNECTING_TO_TOR_STRING() { return [OTRLanguageManager translatedString:@"Connecting to Tor"]; }
/** "Chat", Title for chat view */
NSString* CHAT_STRING() { return [OTRLanguageManager translatedString:@"Chat"]; }
/** "Received a heartbeat.", Error string for OTR message string */
NSString* OTRL_MSGEVENT_LOG_HEARTBEAT_RCVD_STRING() { return [OTRLanguageManager translatedString:@"Received a heartbeat."]; }
/** "Facebook has remmoved acces to the chat API", Message for when facebook accounts removed */
NSString* FACEBOOK_REMOVED_MESSAGE_STRING() { return [OTRLanguageManager translatedString:@"Facebook has remmoved acces to the chat API"]; }
/** "Do Not Disturb", Default message when a user status is set to do not disturb */
NSString* DO_NOT_DISTURB_STRING() { return [OTRLanguageManager translatedString:@"Do Not Disturb"]; }
/** "SSL protocol error", SSL error message */
NSString* errSSLProtocolString() { return [OTRLanguageManager translatedString:@"SSL protocol error"]; }
/** "View profile to review contact's devices or change encryption settings.", Describe how to change a contact's device settings */
NSString* VIEW_PROFILE_DESCRIPTION_STRING() { return [OTRLanguageManager translatedString:@"View profile to review contact's devices or change encryption settings."]; }
/** "Chat with me securely", Body of SMS or email when sharing a link to the app */
NSString* SHARE_MESSAGE_STRING() { return [OTRLanguageManager translatedString:@"Chat with me securely"]; }
/** "Sent a heartbeat.", Error string for OTR message string */
NSString* OTRL_MSGEVENT_LOG_HEARTBEAT_SENT_STRING() { return [OTRLanguageManager translatedString:@"Sent a heartbeat."]; }
/** "We could not find any trusted devices for this account.", Error message for not finding any devices */
NSString* NO_DEVICES_ACCOUNT_ERROR_STRING() { return [OTRLanguageManager translatedString:@"We could not find any trusted devices for this account."]; }
/** "To use this feature you must re-enable microphone permissions.", microphone permission is disabled */
NSString* Microphone_Reenable_Please() { return [OTRLanguageManager translatedString:@"To use this feature you must re-enable microphone permissions."]; }
/** "Connection closed gracefully", SSL error message */
NSString* errSSLClosedGracefulString() { return [OTRLanguageManager translatedString:@"Connection closed gracefully"]; }
/** "Valid certificate", shown to show that the certificate was valid to the system */
NSString* VALID_CERTIFICATE_STRING() { return [OTRLanguageManager translatedString:@"Valid certificate"]; }
/** "New", For a new settings value */
NSString* NEW_STRING() { return [OTRLanguageManager translatedString:@"New"]; }
/** "Unexpected message received", SSL error message */
NSString* errSSLPeerUnexpectedMsgString() { return [OTRLanguageManager translatedString:@"Unexpected message received"]; }
/** "Delete chats on disconnect", Description for automatic conversation deletion */
NSString* DELETE_CONVERSATIONS_ON_DISCONNECT_DESCRIPTION_STRING() { return [OTRLanguageManager translatedString:@"Delete chats on disconnect"]; }
/** "Invite SMS", Label for inviting friends via sms */
NSString* INVITE_SMS_STRING() { return [OTRLanguageManager translatedString:@"Invite SMS"]; }
/** "Chats", Title for chats view */
NSString* CHATS_STRING() { return [OTRLanguageManager translatedString:@"Chats"]; }
/** "Help Translate", Label for button to open link to translate app */
NSString* HELP_TRANSLATE_STRING() { return [OTRLanguageManager translatedString:@"Help Translate"]; }
/** "Not Verified", To let the user know the fingerprint as not been checked */
NSString* NOT_VERIFIED_STRING() { return [OTRLanguageManager translatedString:@"Not Verified"]; }
/** "Decryption error", SSL error message */
NSString* errSSLPeerDecryptErrorString() { return [OTRLanguageManager translatedString:@"Decryption error"]; }
/** "Choose Server", title for server selection screen */
NSString* Choose_Server_String() { return [OTRLanguageManager translatedString:@"Choose Server"]; }
/** "Bad certificate format", SSL error message */
NSString* errSSLBadCertString() { return [OTRLanguageManager translatedString:@"Bad certificate format"]; }
/** "Peer dropped connection before responding", SSL error message */
NSString* errSSLConnectionRefusedString() { return [OTRLanguageManager translatedString:@"Peer dropped connection before responding"]; }
/** "Security Warning", Title of alert box warning about security issues */
NSString* SECURITY_WARNING_STRING() { return [OTRLanguageManager translatedString:@"Security Warning"]; }
/** "Verified", To let the user know the fingerprint as been checked */
NSString* VERIFIED_STRING() { return [OTRLanguageManager translatedString:@"Verified"]; }
/** "Buddy Info", The title for the view that shows detailed buddy info */
NSString* BUDDY_INFO_STRING() { return [OTRLanguageManager translatedString:@"Buddy Info"]; }
/** "New Passphrase", title label for the new passphrase */
NSString* NEW_PASSPHRASE_STRING() { return [OTRLanguageManager translatedString:@"New Passphrase"]; }
/** "Account", The string describing a buddy's account */
NSString* ACCOUNT_STRING() { return [OTRLanguageManager translatedString:@"Account"]; }
/** "Knock", Label for button after to send push notification knock. Like knocking on a door */
NSString* KNOCK_STRING() { return [OTRLanguageManager translatedString:@"Knock"]; }
/** "This QR Code contains a link to http://omniqrcode.com/q/chatsecure and will redirect to the App Store.", Instructions label text underneath QR code */
NSString* QR_CODE_INSTRUCTIONS_STRING() { return [OTRLanguageManager translatedString:@"This QR Code contains a link to http://omniqrcode.com/q/chatsecure and will redirect to the App Store."]; }
/** "Remember password", label for switch for whether or not we should save their password between launches */
NSString* REMEMBER_PASSWORD_STRING() { return [OTRLanguageManager translatedString:@"Remember password"]; }
/** "Warning: This chat is not encrypted", Warn user that the current chat is not secure */
NSString* CONVERSATION_NOT_SECURE_WARNING_STRING() { return [OTRLanguageManager translatedString:@"Warning: This chat is not encrypted"]; }
/** "Cancel Encrypted Chat", Shown when ending an encrypted chat session */
NSString* CANCEL_ENCRYPTED_CHAT_STRING() { return [OTRLanguageManager translatedString:@"Cancel Encrypted Chat"]; }
/** "We can automatically generate you a secure password. If you choose your own, make sure it's a unique password you don't use anywhere else.", help text for password generator */
NSString* Generate_Secure_Password_Hint() { return [OTRLanguageManager translatedString:@"We can automatically generate you a secure password. If you choose your own, make sure it's a unique password you don't use anywhere else."]; }
/** "Enable Push in Settings", button for enabling push messages in iOS system settings */
NSString* ENABLE_PUSH_IN_SETTINGS_STRING() { return [OTRLanguageManager translatedString:@"Enable Push in Settings"]; }
/** "Best Available",  */
NSString* Best_Available() { return [OTRLanguageManager translatedString:@"Best Available"]; }
/** "Settings", Title for the Settings screen */
NSString* SETTINGS_STRING() { return [OTRLanguageManager translatedString:@"Settings"]; }
/** "Encryption Error", Generic title for encryption errors */
NSString* ENCRYPTION_ERROR_STRING() { return [OTRLanguageManager translatedString:@"Encryption Error"]; }
/** "The fingerprint has changed and needs to be verified", Title to let user know that the OTR fingerprint has not been checked */
NSString* LOCKED_ERROR_STRING() { return [OTRLanguageManager translatedString:@"The fingerprint has changed and needs to be verified"]; }
/** "Sign Up", title label for signing up for a new account */
NSString* SIGN_UP_STRING() { return [OTRLanguageManager translatedString:@"Sign Up"]; }
/** "Remember Passphrase", Label for switch to save passphrase */
NSString* REMEMBER_PASSPHRASE_STRING() { return [OTRLanguageManager translatedString:@"Remember Passphrase"]; }
/** "Manage ChatSecure Push account", Title for button to manage ChatSecure Push account */
NSString* MANAGE_CHATSECURE_PUSH_ACCOUNT_STRING() { return [OTRLanguageManager translatedString:@"Manage ChatSecure Push account"]; }
/** "Miscellaneous bad certificate", SSL error message */
NSString* errSSLPeerBadCertString() { return [OTRLanguageManager translatedString:@"Miscellaneous bad certificate"]; }
/** "Add Existing Account", Label for button to create account by logging into an existing account */
NSString* ADD_EXISTING_STRING() { return [OTRLanguageManager translatedString:@"Add Existing Account"]; }
/** "Generate Secure Password", whether or not we should generate a strong password for them */
NSString* Generate_Secure_Password() { return [OTRLanguageManager translatedString:@"Generate Secure Password"]; }
/** "Old", For an old settings value */
NSString* OLD_STRING() { return [OTRLanguageManager translatedString:@"Old"]; }
/** "Because the database contents is encrypted with your passphrase, you've lost access to your data and will need to delete and reinstall ChatSecure to continue. Password managers like 1Password or MiniKeePass can be helpful for generating and storing strong passwords.", Text describing what happens when the user has forgotten the passphrase */
NSString* FORGOT_PASSPHRASE_INFO_STRING() { return [OTRLanguageManager translatedString:@"Because the database contents is encrypted with your passphrase, you've lost access to your data and will need to delete and reinstall ChatSecure to continue. Password managers like 1Password or MiniKeePass can be helpful for generating and storing strong passwords."]; }
/** "Check out the source here on Github", let users know source is on Github */
NSString* SOURCE_STRING() { return [OTRLanguageManager translatedString:@"Check out the source here on Github"]; }
/** "The database passphrase change was successful.", shown when changing database passphrase succeeds */
NSString* DATABASE_PASSPHRASE_CHANGE_SUCCESS_STRING() { return [OTRLanguageManager translatedString:@"The database passphrase change was successful."]; }
/** "Attempt to restore an unknown session", SSL error message */
NSString* errSSLSessionNotFoundString() { return [OTRLanguageManager translatedString:@"Attempt to restore an unknown session"]; }
/** "Info", Short for information, button title to get more information */
NSString* INFO_STRING() { return [OTRLanguageManager translatedString:@"Info"]; }
/** "Other", Title for other miscellaneous settings group */
NSString* OTHER_STRING() { return [OTRLanguageManager translatedString:@"Other"]; }
/** "Reply", Reply to an incoming message */
NSString* REPLY_STRING() { return [OTRLanguageManager translatedString:@"Reply"]; }
/** "The XMPP server does not support in-band registration", Error message for when in band registration is not supported */
NSString* IN_BAND_ERROR_STRING() { return [OTRLanguageManager translatedString:@"The XMPP server does not support in-band registration"]; }
/** "Available", Label in buddy list for users that are available */
NSString* AVAILABLE_STRING() { return [OTRLanguageManager translatedString:@"Available"]; }
/** "Create New Account", Label for button to create a new account via in band registration */
NSString* CREATE_NEW_ACCOUNT_STRING() { return [OTRLanguageManager translatedString:@"Create New Account"]; }
/** "Bad MAC", SSL error message */
NSString* errSSLPeerBadRecordMacString() { return [OTRLanguageManager translatedString:@"Bad MAC"]; }
/** "Optional", Hint text for domain field telling user this field is not required */
NSString* OPTIONAL_STRING() { return [OTRLanguageManager translatedString:@"Optional"]; }
/** "Plaintext Only",  */
NSString* Plaintext_Only() { return [OTRLanguageManager translatedString:@"Plaintext Only"]; }
/** "Chain had a cert not yet valid", SSL error message */
NSString* errSSLCertNotYetValidString() { return [OTRLanguageManager translatedString:@"Chain had a cert not yet valid"]; }
/** "User canceled", SSL error message */
NSString* errSSLPeerUserCancelledString() { return [OTRLanguageManager translatedString:@"User canceled"]; }
/** "Delivered", Shows in the chat view when a message has been delivered */
NSString* DELIVERED_STRING() { return [OTRLanguageManager translatedString:@"Delivered"]; }
/** "About", Title for the about page */
NSString* ABOUT_STRING() { return [OTRLanguageManager translatedString:@"About"]; }
/** "Required", String to let user know a certain field like a password is required to create an account */
NSString* REQUIRED_STRING() { return [OTRLanguageManager translatedString:@"Required"]; }
/** "Please choose a valid email address", detail title label for invalid email */
NSString* INVALID_EMAIL_DETAIL_STRING() { return [OTRLanguageManager translatedString:@"Please choose a valid email address"]; }
/** "Share Invite", Label for inviting friends via URL */
NSString* INVITE_LINK_STRING() { return [OTRLanguageManager translatedString:@"Share Invite"]; }
/** "Fingerprint for you", your fingerprint */
NSString* YOUR_FINGERPRINT_STRING() { return [OTRLanguageManager translatedString:@"Fingerprint for you"]; }
/** "Compose", Label for text field where you compose a new message */
NSString* COMPOSE_STRING() { return [OTRLanguageManager translatedString:@"Compose"]; }
/** "This message was sent to an untrusted device.", Error message description */
NSString* UNTRUSTED_DEVICE_SENT_STRING() { return [OTRLanguageManager translatedString:@"This message was sent to an untrusted device."]; }
/** "Forgot Passphrase?", Label for button when you've forgotten the passphrase */
NSString* FORGOT_PASSPHRASE_STRING() { return [OTRLanguageManager translatedString:@"Forgot Passphrase?"]; }
/** "Next", Label for button to go to next step */
NSString* NEXT_STRING() { return [OTRLanguageManager translatedString:@"Next"]; }
/** "Duplicate account", Error title when there is a duplicate account */
NSString* DUPLICATE_ACCOUNT_STRING() { return [OTRLanguageManager translatedString:@"Duplicate account"]; }
/** "Enable", enable permission */
NSString* Enable_String() { return [OTRLanguageManager translatedString:@"Enable"]; }
/** "Scan QR", Label for sharing via QR Code */
NSString* SCAN_QR_STRING() { return [OTRLanguageManager translatedString:@"Scan QR"]; }
/** "Basic", string to describe basic set of settings */
NSString* BASIC_STRING() { return [OTRLanguageManager translatedString:@"Basic"]; }
/** "Language", string to bring up language selector */
NSString* LANGUAGE_STRING() { return [OTRLanguageManager translatedString:@"Language"]; }
/** "Valid cert chain, untrusted root", SSL error message */
NSString* errSSLUnknownRootCertString() { return [OTRLanguageManager translatedString:@"Valid cert chain, untrusted root"]; }
/** "Set new database passphrase", Detail label for button to change encrypted database passphrase */
NSString* SET_NEW_DATABASE_PASSPHRASE_STRING() { return [OTRLanguageManager translatedString:@"Set new database passphrase"]; }
/** "is now available", Message shown in line for users that are available */
NSString* AVAILABLE_MESSAGE_STRING() { return [OTRLanguageManager translatedString:@"is now available"]; }
/** "The message received contains malformed data.", Error string for OTR message string */
NSString* OTRL_MSGEVENT_RCVDMSG_MALFORMED_STRING() { return [OTRLanguageManager translatedString:@"The message received contains malformed data."]; }
/** "An error occurred while changing the database passphrase.", shown when changing database passphrase fails */
NSString* DATABASE_PASSPHRASE_CHANGE_ERROR_STRING() { return [OTRLanguageManager translatedString:@"An error occurred while changing the database passphrase."]; }
/** "Block & Remove", The String for a buddy to block and remove a buddy from the buddy list */
NSString* BLOCK_AND_REMOVE_STRING() { return [OTRLanguageManager translatedString:@"Block & Remove"]; }
/** "Creating Account", Title for progress of creating a new account */
NSString* CREATING_ACCOUNT_STRING() { return [OTRLanguageManager translatedString:@"Creating Account"]; }
/** "An error occurred while setting up the database.", Error message when setting up database */
NSString* DATABASE_SETUP_ERROR_STRING() { return [OTRLanguageManager translatedString:@"An error occurred while setting up the database."]; }
/** "Domain needs to be set manually when specifying a custom port", Message when port is changed but domain not set */
NSString* XMPP_PORT_FAIL_STRING() { return [OTRLanguageManager translatedString:@"Domain needs to be set manually when specifying a custom port"]; }
/** "Someone", A placeholder for a buddy's username like Someone wants to chat. */
NSString* SOMEONE_STRING() { return [OTRLanguageManager translatedString:@"Someone"]; }
/** "Sign out Warning", Title for setting about showing a warning before disconnection */
NSString* DISCONNECTION_WARNING_TITLE_STRING() { return [OTRLanguageManager translatedString:@"Sign out Warning"]; }
/** "Buddy List", Title for the buddy list tab */
NSString* BUDDY_LIST_STRING() { return [OTRLanguageManager translatedString:@"Buddy List"]; }
/** "Certificate revoked", SSL error message */
NSString* errSSLPeerCertRevokedString() { return [OTRLanguageManager translatedString:@"Certificate revoked"]; }
/** "Verify Later", Shown when verifying fingerprints */
NSString* VERIFY_LATER_STRING() { return [OTRLanguageManager translatedString:@"Verify Later"]; }
/** "Logging in...", shown during the login process */
NSString* LOGGING_IN_STRING() { return [OTRLanguageManager translatedString:@"Logging in..."]; }
/** "Cannot recognize the type of OTR message received.", Error string for OTR message string */
NSString* OTRL_MSGEVENT_RCVDMSG_UNRECOGNIZED_STRING() { return [OTRLanguageManager translatedString:@"Cannot recognize the type of OTR message received."]; }
/** "SSL Hostname Mismatch", string for settings to allow SSL mismatch */
NSString* SSL_MISMATCH_STRING() { return [OTRLanguageManager translatedString:@"SSL Hostname Mismatch"]; }
/** "Release to send", Label for instruction to send current audio */
NSString* RELEASE_TO_SEND_STRING() { return [OTRLanguageManager translatedString:@"Release to send"]; }
/** "Invalid certificate chain", SSL error message */
NSString* errSSLXCertChainInvalidString() { return [OTRLanguageManager translatedString:@"Invalid certificate chain"]; }
/** "Email", The string describing account name or email address for a buddy */
NSString* EMAIL_STRING() { return [OTRLanguageManager translatedString:@"Email"]; }
/** "user@example.com", Example of a username using the words user and example */
NSString* XMPP_USERNAME_EXAMPLE_STRING() { return [OTRLanguageManager translatedString:@"user@example.com"]; }
/** "Open in Chrome", Label to open link in the chrome web browser */
NSString* OPEN_IN_CHROME() { return [OTRLanguageManager translatedString:@"Open in Chrome"]; }
/** "You must be in a secure conversation first.", Inform user that they must be secure their conversation before doing that action */
NSString* SECURE_CONVERSATION_STRING() { return [OTRLanguageManager translatedString:@"You must be in a secure conversation first."]; }
/** "Would you like to connect to UserVoice to send feedback?", actionsheet for showing uservoice feedback service */
NSString* SHOW_USERVOICE_STRING() { return [OTRLanguageManager translatedString:@"Would you like to connect to UserVoice to send feedback?"]; }
/** "Current Passphrase", title label for the existing passphrase */
NSString* CURRENT_PASSPHRASE_STRING() { return [OTRLanguageManager translatedString:@"Current Passphrase"]; }
/** "Self Signed SSL", string for settings to allow self signed SSL string */
NSString* SELF_SIGNED_SSL_STRING() { return [OTRLanguageManager translatedString:@"Self Signed SSL"]; }
/** "About This Version", Label for button to show version numbers and licenses */
NSString* ABOUT_VERSION_STRING() { return [OTRLanguageManager translatedString:@"About This Version"]; }
/** "Take Photo", Label for button to take a photo from camera */
NSString* USE_CAMERA_STRING() { return [OTRLanguageManager translatedString:@"Take Photo"]; }
/** "Buddy Fingerprints", Title for showing the users buddies otr fingerprints */
NSString* BUDDY_FINGERPRINTS_STRING() { return [OTRLanguageManager translatedString:@"Buddy Fingerprints"]; }
/** "Manage saved SSL certificates", subtitle for the certificate pinned setting */
NSString* PINNED_CERTIFICATES_DESCRIPTION_STRING() { return [OTRLanguageManager translatedString:@"Manage saved SSL certificates"]; }
/** "Customize Username", if you want to change your username */
NSString* Customize_Username() { return [OTRLanguageManager translatedString:@"Customize Username"]; }
/** "Remove", The String for a button to remove a buddy from the buddy list */
NSString* REMOVE_STRING() { return [OTRLanguageManager translatedString:@"Remove"]; }
/** "Default", default string to revert to normal language behaviour */
NSString* DEFAULT_LANGUAGE_STRING() { return NSLocalizedString(@"Default",@"default string to revert to normal language behaviour")
; }
